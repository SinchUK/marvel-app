{"ast":null,"code":"var _jsxFileName = \"C:\\\\DiskA\\\\Frontend\\\\Udemy2021Tasks\\\\Projects\\\\React\\\\marvel\\\\marvel-app\\\\src\\\\components\\\\pages\\\\SingleComicPage.js\",\n    _s = $RefreshSig$();\n\nimport './singleComicPage.scss';\nimport useMarvelService from '../../services/MarvelService';\nimport { useParams, Link, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react'; // import PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport AppBanner from '../appBanner/AppBanner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SingleComicPage = () => {\n  _s();\n\n  let location = useLocation();\n  const {\n    comicId\n  } = useParams();\n  const [comic, setComic] = useState(null);\n  const {\n    loading,\n    error,\n    getComic,\n    clearError\n  } = useMarvelService();\n  useEffect(() => {\n    updateComic();\n  }, [comicId]);\n\n  const updateComic = () => {\n    clearError();\n    getComic(comicId).then(onComicLoaded);\n  };\n\n  const onComicLoaded = comic => {\n    setComic(comic);\n  };\n\n  const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 31\n  }, this) : null;\n  const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 34\n  }, this) : null;\n  const content = !(loading || error || !comic) ? /*#__PURE__*/_jsxDEV(View, {\n    comic: comic\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 54\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBanner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), errorMessage, spinner, content]\n  }, void 0, true);\n};\n\n_s(SingleComicPage, \"F8u0YVcnTzfNTCGCrk+cSejlSQ8=\", false, function () {\n  return [useLocation, useParams, useMarvelService];\n});\n\n_c = SingleComicPage;\n\nconst View = _ref => {\n  let {\n    comic\n  } = _ref;\n  console.log(comic, \"comic\");\n  const {\n    title,\n    thumbnail,\n    description,\n    pageCount,\n    language,\n    price\n  } = comic;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"single-comic\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: thumbnail,\n      alt: title,\n      className: \"single-comic__img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"single-comic__info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"single-comic__name\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"single-comic__descr\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"single-comic__descr\",\n        children: [\"Pages: \", pageCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"single-comic__descr\",\n        children: [\"Language: \", language]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"single-comic__price\",\n        children: [price, \"$\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/comics\",\n      className: \"single-comic__back\",\n      children: \"Back to all\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = View;\nexport default SingleComicPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SingleComicPage\");\n$RefreshReg$(_c2, \"View\");","map":{"version":3,"sources":["C:/DiskA/Frontend/Udemy2021Tasks/Projects/React/marvel/marvel-app/src/components/pages/SingleComicPage.js"],"names":["useMarvelService","useParams","Link","useLocation","useEffect","useState","Spinner","ErrorMessage","AppBanner","SingleComicPage","location","comicId","comic","setComic","loading","error","getComic","clearError","updateComic","then","onComicLoaded","spinner","errorMessage","content","View","console","log","title","thumbnail","description","pageCount","language","price"],"mappings":"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","sourcesContent":["import './singleComicPage.scss';\r\nimport  useMarvelService  from '../../services/MarvelService';\r\nimport { useParams, Link, useLocation } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport AppBanner from '../appBanner/AppBanner';\r\n\r\nconst SingleComicPage = () => {\r\n    let location = useLocation();\r\n    \r\n    \r\n    \r\n\r\n    const {comicId} = useParams();\r\n    const [comic, setComic] = useState(null);\r\n\r\n    const { loading, error, getComic, clearError } = useMarvelService();\r\n\r\n\r\n    useEffect(() => {\r\n        updateComic();\r\n    },[comicId])\r\n\r\n   const updateComic = () => { \r\n        clearError();\r\n        getComic(comicId)\r\n            .then(onComicLoaded)\r\n    }\r\n\r\n   const onComicLoaded = (comic) => {\r\n        setComic(comic);\r\n    }\r\n\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const content = !(loading || error  || !comic) ? <View comic={comic}/> : null;\r\n\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </>\r\n    )\r\n}\r\n\r\nconst View = ({comic}) => {\r\n    console.log(comic, \"comic\");\r\n    const {title, thumbnail, description, pageCount, language, price} = comic;\r\n\r\n    return (\r\n        <div className=\"single-comic\">\r\n            <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\r\n            <div className=\"single-comic__info\">\r\n                <h2 className=\"single-comic__name\">{title}</h2>\r\n                <p className=\"single-comic__descr\">{description}</p>\r\n                <p className=\"single-comic__descr\">Pages: {pageCount}</p>\r\n                <p className=\"single-comic__descr\">Language: {language}</p>\r\n                <div className=\"single-comic__price\">{price}$</div>\r\n            </div>\r\n            <Link to=\"/comics\" className=\"single-comic__back\">Back to all</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleComicPage;"]},"metadata":{},"sourceType":"module"}