{"ast":null,"code":"var _jsxFileName = \"C:\\\\DiskA\\\\Frontend\\\\Udemy2021Tasks\\\\Projects\\\\React\\\\marvel\\\\marvel-app\\\\src\\\\components\\\\charInfo\\\\CharInfo.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './charInfo.scss';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\nimport ImgObjFit from '../blocks/imgObjectFit';\nimport { Link, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CharInfo = props => {\n  _s();\n\n  // console.log(props, \"props char info\");\n  let location = useLocation();\n  console.log(location, \"location\");\n  const [char, setChar] = useState(null);\n  const {\n    loading,\n    error,\n    getCharacter,\n    clearError\n  } = useMarvelService();\n  useEffect(() => {\n    updateChar();\n  }, [props.charId]);\n\n  const updateChar = () => {\n    const {\n      charId\n    } = props;\n\n    if (!charId) {\n      return;\n    }\n\n    clearError();\n    getCharacter(charId).then(onCharLoaded);\n  };\n\n  const onCharLoaded = char => {\n    setChar(char);\n  };\n\n  const skeleton = char || loading || error ? null : /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 56\n  }, this);\n  const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 34\n  }, this) : null;\n  const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 31\n  }, this) : null;\n  const content = !(loading || error || !char) ? /*#__PURE__*/_jsxDEV(View, {\n    char: char\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 53\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"char__info\",\n    children: [skeleton, errorMessage, spinner, content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CharInfo, \"HrV4BH14cJtpOsYK2WN1jSr+pJk=\", false, function () {\n  return [useLocation, useMarvelService];\n});\n\n_c = CharInfo;\n\nconst View = _ref => {\n  let {\n    char\n  } = _ref;\n\n  const onComicSelected = comicId => {\n    console.log(comicId, \"comic ID in selected\");\n  };\n\n  const {\n    name,\n    description,\n    homepage,\n    wiki,\n    comics\n  } = char;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__basics\",\n      children: [/*#__PURE__*/_jsxDEV(ImgObjFit, {\n        char: char\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__info-name\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__btns\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: homepage,\n            className: \"button button__main\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: \"homepage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: wiki,\n            className: \"button button__secondary\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: \"Wiki\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__descr\",\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__comics\",\n      children: \"Comics:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__comics-list\",\n      children: [comics.length > 0 ? null : 'There is no comics this character', comics.map((item, i) => {\n        const comicId = item.resourceURI.slice(43); // eslint-disable-next-line\n\n        if (i > 9) return;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"char__comics-item\",\n          onClick: () => {\n            onComicSelected(comicId);\n          },\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/comics/${comicId}`,\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 33\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 29\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c2 = View;\nCharInfo.propTypes = {\n  charId: PropTypes.number\n};\nexport default CharInfo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CharInfo\");\n$RefreshReg$(_c2, \"View\");","map":{"version":3,"sources":["C:/DiskA/Frontend/Udemy2021Tasks/Projects/React/marvel/marvel-app/src/components/charInfo/CharInfo.js"],"names":["useEffect","useState","PropTypes","useMarvelService","Spinner","ErrorMessage","Skeleton","ImgObjFit","Link","useLocation","CharInfo","props","location","console","log","char","setChar","loading","error","getCharacter","clearError","updateChar","charId","then","onCharLoaded","skeleton","errorMessage","spinner","content","View","onComicSelected","comicId","name","description","homepage","wiki","comics","length","map","item","i","resourceURI","slice","propTypes","number"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './charInfo.scss';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Skeleton from '../skeleton/Skeleton';\r\nimport ImgObjFit from '../blocks/imgObjectFit';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\n\r\n\r\nconst CharInfo = (props) => {\r\n    // console.log(props, \"props char info\");\r\n    let location = useLocation();\r\n    console.log(location, \"location\");\r\n    \r\n\r\n    const [char, setChar] = useState(null);\r\n    const { loading, error, getCharacter, clearError } = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateChar();\r\n        \r\n    },[props.charId])\r\n\r\n   const updateChar = () => {\r\n        const {charId} = props;\r\n        if (!charId) {\r\n            return;\r\n        }\r\n        clearError();\r\n        getCharacter(charId)\r\n            .then(onCharLoaded)\r\n    }\r\n\r\n   const onCharLoaded = (char) => {\r\n        setChar(char);\r\n    }\r\n\r\n\r\n   \r\n\r\n    const skeleton = char || loading || error ? null : <Skeleton/>; \r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error  || !char) ? <View char={char}/> : null;\r\n\r\n    return (\r\n        <div className=\"char__info\">\r\n            {skeleton}\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}        \r\n        </div>\r\n    )\r\n}\r\n\r\nconst View = ({char}) => {\r\n\r\n    const onComicSelected = (comicId) => {\r\n        console.log(comicId, \"comic ID in selected\");\r\n   }\r\n\r\n    const {name, description, homepage, wiki, comics} = char;\r\n    return (\r\n        <>\r\n            <div className=\"char__basics\">\r\n                <ImgObjFit char={char}/>\r\n                <div>\r\n                    <div className=\"char__info-name\">{name}</div>\r\n                    <div className=\"char__btns\">\r\n                        <a href={homepage} className=\"button button__main\">\r\n                            <div className=\"inner\">homepage</div>\r\n                        </a>\r\n                        <a href={wiki} className=\"button button__secondary\">\r\n                            <div className=\"inner\">Wiki</div>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"char__descr\">\r\n                {description}\r\n            </div>\r\n            <div className=\"char__comics\">Comics:</div>\r\n            <ul className=\"char__comics-list\">\r\n                {comics.length > 0 ? null : 'There is no comics this character'}\r\n                {\r\n                    comics.map((item, i) => {\r\n                        \r\n                        const comicId = item.resourceURI.slice(43);\r\n                        // eslint-disable-next-line\r\n                        if (i > 9) return;\r\n                        return (\r\n                            <li key={i}\r\n                                className=\"char__comics-item\"\r\n                                onClick={() => {\r\n                                onComicSelected(comicId);\r\n                            }}>\r\n                                <Link to={`/comics/${comicId}`}>\r\n                                    {item.name}\r\n                                </Link>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nCharInfo.propTypes = {\r\n    charId: PropTypes.number\r\n}\r\n\r\nexport default CharInfo;"]},"metadata":{},"sourceType":"module"}