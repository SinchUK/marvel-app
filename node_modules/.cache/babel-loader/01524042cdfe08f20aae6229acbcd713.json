{"ast":null,"code":"var _jsxFileName = \"C:\\\\DiskA\\\\Frontend\\\\Udemy2021Tasks\\\\Projects\\\\React\\\\marvel\\\\marvel-app\\\\src\\\\components\\\\comicsList\\\\ComicsList.js\",\n    _s = $RefreshSig$();\n\nimport './comicsList.scss';\nimport useMarvelService from '../../services/MarvelService';\nimport { useEffect, useState } from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ComicsList = () => {\n  _s();\n\n  const [comicsList, setComicsList] = useState([]);\n  const [offset, setOffset] = useState(1000);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [comicsEnded, setComicsEnded] = useState(false);\n  const {\n    loading,\n    error,\n    getAllComics\n  } = useMarvelService();\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\n    getAllComics(offset).then(onComicsListLoaded);\n  };\n\n  const onComicsListLoaded = newComicsList => {\n    let ended = false;\n\n    if (newComicsList.length < 8) {\n      ended = true;\n    }\n\n    setNewItemLoading(newItemLoading => false);\n    setComicsList(comicsList => [...comicsList, ...newComicsList]);\n    setOffset(offset => offset + 8);\n    setComicsEnded(comicsEnded => ended); // (newComicsList) => [...comicsList, ...newComicsList]\n  };\n\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      const {\n        id,\n        title,\n        thumbnail,\n        price,\n        url\n      } = item;\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"comics__item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: url,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: thumbnail,\n            alt: \"ultimate war\",\n            className: \"comics__item-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comics__item-name\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comics__item-price\",\n            children: realPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"comics__grid\",\n      children: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n  const items = renderItems(comicsList);\n  const spinner = loading && !newItemLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 50\n  }, this) : null;\n  const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 34\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comics__list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comimcs__loading\",\n      children: [errorMessage, spinner]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"comics__grid\",\n      style: {\n        textAlign: 'center'\n      },\n      children: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button button__main button__long\",\n      style: {\n        'display': comicsEnded ? 'none' : 'block'\n      },\n      onClick: () => onRequest(offset),\n      disabled: newItemLoading,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: \"load more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ComicsList, \"eg1+JaOdK782SCxHcUSdgGP1xrs=\", false, function () {\n  return [useMarvelService];\n});\n\n_c = ComicsList;\nexport default ComicsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ComicsList\");","map":{"version":3,"sources":["C:/DiskA/Frontend/Udemy2021Tasks/Projects/React/marvel/marvel-app/src/components/comicsList/ComicsList.js"],"names":["useMarvelService","useEffect","useState","Spinner","ErrorMessage","ComicsList","comicsList","setComicsList","offset","setOffset","newItemLoading","setNewItemLoading","comicsEnded","setComicsEnded","loading","error","getAllComics","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","renderItems","arr","items","map","item","i","id","title","thumbnail","price","url","realPrice","spinner","errorMessage","textAlign"],"mappings":"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","sourcesContent":["import './comicsList.scss';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport { useEffect, useState } from 'react';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nconst ComicsList = () => {\r\n\r\n    const [comicsList, setComicsList] = useState([]);\r\n    const [offset, setOffset ] = useState(1000);\r\n    const [newItemLoading, setNewItemLoading] = useState(false);\r\n    const [comicsEnded, setComicsEnded] = useState(false);\r\n\r\n    const {loading, error, getAllComics} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        onRequest(offset, true);\r\n    },[])\r\n\r\n    const onRequest = (offset, initial) => {\r\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n        getAllComics(offset)\r\n            .then(onComicsListLoaded);\r\n    }\r\n\r\n    const  onComicsListLoaded = (newComicsList) => {\r\n        let ended = false;\r\n        if (newComicsList.length < 8) {\r\n            ended = true;\r\n        }\r\n        setNewItemLoading(newItemLoading => false);\r\n        setComicsList(comicsList => [...comicsList, ...newComicsList]); \r\n\r\n        setOffset(offset => offset + 8);\r\n        setComicsEnded(comicsEnded => ended);\r\n        // (newComicsList) => [...comicsList, ...newComicsList]\r\n    }\r\n\r\n    function renderItems (arr) {\r\n        const items = arr.map(( item, i ) => {\r\n            const {id, title, thumbnail, price, url} = item;\r\n            return (\r\n                <li key={i} className=\"comics__item\">\r\n                    <a href={url}>\r\n                        <img src={thumbnail} alt=\"ultimate war\" className=\"comics__item-img\"/>\r\n                        <div className=\"comics__item-name\">{title}</div>\r\n                        <div className=\"comics__item-price\">{realPrice}</div>\r\n                    </a>\r\n                </li>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <ul className='comics__grid'>\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    const items = renderItems(comicsList);\r\n\r\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n\r\n    return (\r\n        <div className=\"comics__list\">\r\n            <div className='comimcs__loading'>\r\n                {errorMessage}\r\n                {spinner}\r\n            </div>\r\n            <ul className=\"comics__grid\"\r\n                style={{textAlign: 'center'}}>\r\n                {items}\r\n            </ul>\r\n            <button \r\n                className=\"button button__main button__long\"\r\n                style={{'display': comicsEnded ? 'none' : 'block'}}\r\n                onClick={() => onRequest(offset)}\r\n                disabled={newItemLoading}>\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ComicsList;"]},"metadata":{},"sourceType":"module"}