{"ast":null,"code":"var _jsxFileName = \"C:\\\\DiskA\\\\Frontend\\\\Udemy2021Tasks\\\\Projects\\\\React\\\\marvel\\\\marvel-app\\\\src\\\\components\\\\randomChar\\\\RandomChar.js\";\nimport { Component } from 'react';\nimport MarvelService from '../../services/MarvelService';\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport ImgObjFit from '../blocks/imgObjectFit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RandomChar extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      char: {},\n      loading: true,\n      error: false\n    };\n    this.marvelService = new MarvelService();\n\n    this.onCharLoaded = char => {\n      this.setState({\n        char,\n        loading: false\n      });\n    };\n\n    this.onCharLoading = () => {\n      this.setState({\n        loading: true\n      });\n    };\n\n    this.onError = () => {\n      this.setState({\n        loading: false,\n        error: true\n      });\n    };\n\n    this.updateChar = () => {\n      const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n      this.onCharLoading();\n      this.marvelService.getCharacter(id).then(this.onCharLoaded).catch(this.onError);\n    };\n  }\n\n  componentDidMount() {\n    this.updateChar();\n  }\n\n  render() {\n    const {\n      char,\n      loading,\n      error\n    } = this.state;\n    const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 38\n    }, this) : null;\n    const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 35\n    }, this) : null;\n    const content = !(loading || error) ? /*#__PURE__*/_jsxDEV(View, {\n      char: char\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 47\n    }, this) : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"randomchar\",\n      children: [errorMessage, spinner, content, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"randomchar__static\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"randomchar__title\",\n          children: [\"Random character for today!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 52\n          }, this), \"Do you want to get to know him better?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"randomchar__title\",\n          children: \"Or choose another one\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button button__main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            onClick: this.updateChar,\n            children: \"try it\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: mjolnir,\n          alt: \"mjolnir\",\n          className: \"randomchar__decoration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst View = _ref => {\n  let {\n    char\n  } = _ref;\n  const {\n    name,\n    description,\n    homepage,\n    wiki\n  } = char;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"randomchar__block\",\n    children: [/*#__PURE__*/_jsxDEV(ImgObjFit, {\n      char: char\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"randomchar__info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"randomchar__name\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"randomchar__descr\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"randomchar__btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: homepage,\n          className: \"button button__main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: \"homepage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: wiki,\n          className: \"button button__secondary\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: \"Wiki\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 13\n  }, this);\n}; // const Img = ({char}) => {\n//     const {thumbnail} = char;\n//     if (thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") {\n//         return (\n//             <img src={thumbnail} alt=\"Random character\" style={{objectFit:\"contain\"}} className=\"randomchar__img\"/>\n//         )\n//     } else {\n//         return (\n//             <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\"/>\n//         )\n//     }\n// }\n\n\n_c = View;\nexport default RandomChar;\n\nvar _c;\n\n$RefreshReg$(_c, \"View\");","map":{"version":3,"sources":["C:/DiskA/Frontend/Udemy2021Tasks/Projects/React/marvel/marvel-app/src/components/randomChar/RandomChar.js"],"names":["Component","MarvelService","mjolnir","Spinner","ErrorMessage","ImgObjFit","RandomChar","state","char","loading","error","marvelService","onCharLoaded","setState","onCharLoading","onError","updateChar","id","Math","floor","random","getCharacter","then","catch","componentDidMount","render","errorMessage","spinner","content","View","name","description","homepage","wiki"],"mappings":"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","sourcesContent":["import { Component } from 'react';\r\nimport MarvelService from '../../services/MarvelService';\r\nimport './randomChar.scss';\r\n\r\nimport mjolnir from '../../resources/img/mjolnir.png';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport ImgObjFit from '../blocks/imgObjectFit';\r\n\r\nclass RandomChar extends Component {\r\n\r\n    state = {\r\n        char: {},\r\n        loading: true,\r\n        error: false\r\n    }\r\n\r\n    marvelService = new MarvelService();\r\n\r\n    componentDidMount() {\r\n        this.updateChar();\r\n    }\r\n\r\n    onCharLoaded = (char) => {\r\n        this.setState({\r\n            char, \r\n            loading: false\r\n        });\r\n    }\r\n\r\n    onCharLoading = () => {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n    }\r\n\r\n    onError = () => {\r\n        this.setState({\r\n            loading: false,\r\n            error: true\r\n        })\r\n    }\r\n\r\n    updateChar = () => {\r\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n        this.onCharLoading();\r\n        this.marvelService\r\n            .getCharacter(id)\r\n            .then(this.onCharLoaded)\r\n            .catch(this.onError);\r\n    }\r\n\r\n    render() {\r\n        const {char, loading, error} = this.state;\r\n        const errorMessage = error ? <ErrorMessage/> : null;\r\n        const spinner = loading ? <Spinner/> : null;\r\n        const content = !(loading || error) ? <View char={char}/> : null;\r\n        \r\n        return (\r\n            <div className=\"randomchar\">\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n                <div className=\"randomchar__static\">\r\n                    <p className=\"randomchar__title\">\r\n                        Random character for today!<br/>\r\n                        Do you want to get to know him better?\r\n                    </p>\r\n                    <p className=\"randomchar__title\">\r\n                        Or choose another one\r\n                    </p>\r\n                    <button className=\"button button__main\">\r\n                        <div className=\"inner\"\r\n                             onClick={this.updateChar}>try it\r\n                        </div>\r\n                    </button>\r\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst View = ({char}) => {\r\n    const {name, description, homepage, wiki} = char;\r\n    \r\n    return (\r\n            <div className=\"randomchar__block\">\r\n                <ImgObjFit char={char}/>\r\n                <div className=\"randomchar__info\">\r\n                    <p className=\"randomchar__name\">{name}</p>\r\n                    <p className=\"randomchar__descr\">\r\n                        {description}\r\n                    </p>\r\n                    <div className=\"randomchar__btns\">\r\n                        <a href={homepage} className=\"button button__main\">\r\n                            <div className=\"inner\">homepage</div>\r\n                        </a>\r\n                        <a href={wiki} className=\"button button__secondary\">\r\n                            <div className=\"inner\">Wiki</div>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\n// const Img = ({char}) => {\r\n//     const {thumbnail} = char;\r\n    \r\n//     if (thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") {\r\n//         return (\r\n//             <img src={thumbnail} alt=\"Random character\" style={{objectFit:\"contain\"}} className=\"randomchar__img\"/>\r\n//         )\r\n//     } else {\r\n//         return (\r\n//             <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\"/>\r\n//         )\r\n//     }\r\n// }\r\n\r\nexport default RandomChar;"]},"metadata":{},"sourceType":"module"}