{"ast":null,"code":"var _jsxFileName = \"C:\\\\DiskA\\\\Frontend\\\\Udemy2021Tasks\\\\Projects\\\\React\\\\marvel\\\\marvel-app\\\\src\\\\components\\\\charInfo\\\\CharInfo.js\",\n    _s = $RefreshSig$();\n\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './charInfo.scss';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\nimport ImgObjFit from '../blocks/imgObjectFit';\nimport { useEffect, useState } from 'react/cjs/react.production.min';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CharInfo = props => {\n  _s();\n\n  const [char, setChar] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false); // static getDerivedStateFromError(error) {\n  //     return {error: true}\n  // }\n\n  const marvelService = new MarvelService();\n  useEffect(() => {\n    updateChar();\n  }, []);\n  useEffect(() => {\n    updateChar();\n  }, [porps.charId]); // componentDidUpdate(prevProps) {\n  //     if (this.props.charId !== prevProps.charId) {\n  //         this.updateChar();\n  //     }\n  // }\n\n  const updateChar = () => {\n    const {\n      charId\n    } = props;\n\n    if (!charId) {\n      return;\n    }\n\n    onCharLoading();\n    marvelService.getCharacter(charId).then(onCharLoaded).catch(onError);\n  };\n\n  const onCharLoaded = char => {\n    setChar(true);\n    setLoading(false);\n  };\n\n  const onCharLoading = () => {\n    setLoading(true);\n  };\n\n  const onError = () => {\n    setLoading(false);\n    setError(true);\n  };\n\n  const skeleton = char || loading || error ? null : /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 56\n  }, this);\n  const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 34\n  }, this) : null;\n  const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 31\n  }, this) : null;\n  const content = !(loading || error || !char) ? /*#__PURE__*/_jsxDEV(View, {\n    char: char\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 53\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"char__info\",\n    children: [skeleton, errorMessage, spinner, content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CharInfo, \"SNz1Z+zpoH8fXheg3OM6wntdimU=\");\n\n_c = CharInfo;\n\nconst View = _ref => {\n  let {\n    char\n  } = _ref;\n  const {\n    name,\n    description,\n    homepage,\n    wiki,\n    comics\n  } = char;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__basics\",\n      children: [/*#__PURE__*/_jsxDEV(ImgObjFit, {\n        char: char\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__info-name\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__btns\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: homepage,\n            className: \"button button__main\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: \"homepage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: wiki,\n            className: \"button button__secondary\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: \"Wiki\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__descr\",\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__comics\",\n      children: \"Comics:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__comics-list\",\n      children: [comics.length > 0 ? null : 'There is no comics this character', comics.map((item, i) => {\n        // eslint-disable-next-line\n        if (i > 9) return;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"char__comics-item\",\n          children: item.name\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 29\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c2 = View;\nCharInfo.propTypes = {\n  charId: PropTypes.number\n};\nexport default CharInfo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CharInfo\");\n$RefreshReg$(_c2, \"View\");","map":{"version":3,"sources":["C:/DiskA/Frontend/Udemy2021Tasks/Projects/React/marvel/marvel-app/src/components/charInfo/CharInfo.js"],"names":["Component","PropTypes","MarvelService","Spinner","ErrorMessage","Skeleton","ImgObjFit","useEffect","useState","CharInfo","props","char","setChar","loading","setLoading","error","setError","marvelService","updateChar","porps","charId","onCharLoading","getCharacter","then","onCharLoaded","catch","onError","skeleton","errorMessage","spinner","content","View","name","description","homepage","wiki","comics","length","map","item","i","propTypes","number"],"mappings":"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","sourcesContent":["import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './charInfo.scss';\r\nimport MarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Skeleton from '../skeleton/Skeleton';\r\nimport ImgObjFit from '../blocks/imgObjectFit';\r\nimport { useEffect, useState } from 'react/cjs/react.production.min';\r\n\r\n\r\n\r\nconst CharInfo = (props) => {\r\n\r\n    const [char, setChar] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(false);\r\n\r\n    // static getDerivedStateFromError(error) {\r\n    //     return {error: true}\r\n    // }\r\n\r\n    const marvelService = new MarvelService();\r\n\r\n    useEffect(() => {\r\n        updateChar();\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        updateChar();\r\n    },[porps.charId])\r\n\r\n\r\n    // componentDidUpdate(prevProps) {\r\n    //     if (this.props.charId !== prevProps.charId) {\r\n    //         this.updateChar();\r\n    //     }\r\n    // }\r\n\r\n\r\n   const updateChar = () => {\r\n        const {charId} = props;\r\n        if (!charId) {\r\n            return;\r\n        }\r\n\r\n        onCharLoading();\r\n\r\n        marvelService\r\n            .getCharacter(charId)\r\n            .then(onCharLoaded)\r\n            .catch(onError)\r\n    }\r\n\r\n   const onCharLoaded = (char) => {\r\n        setChar(true);\r\n        setLoading(false);\r\n    }\r\n\r\n    const onCharLoading = () => {\r\n        setLoading(true);\r\n    }\r\n\r\n    const onError = () => {\r\n        setLoading(false);\r\n        setError(true);\r\n    }\r\n\r\n    const skeleton = char || loading || error ? null : <Skeleton/>; \r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error  || !char) ? <View char={char}/> : null;\r\n\r\n    return (\r\n        <div className=\"char__info\">\r\n            {skeleton}\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}        \r\n        </div>\r\n    )\r\n}\r\n\r\nconst View = ({char}) => {\r\n    const {name, description, homepage, wiki, comics} = char;\r\n    return (\r\n        <>\r\n            <div className=\"char__basics\">\r\n                <ImgObjFit char={char}/>\r\n                {/* <img src={thumbnail} alt={name}/> */}\r\n                <div>\r\n                    <div className=\"char__info-name\">{name}</div>\r\n                    <div className=\"char__btns\">\r\n                        <a href={homepage} className=\"button button__main\">\r\n                            <div className=\"inner\">homepage</div>\r\n                        </a>\r\n                        <a href={wiki} className=\"button button__secondary\">\r\n                            <div className=\"inner\">Wiki</div>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"char__descr\">\r\n                {description}\r\n            </div>\r\n            <div className=\"char__comics\">Comics:</div>\r\n            <ul className=\"char__comics-list\">\r\n                {comics.length > 0 ? null : 'There is no comics this character'}\r\n                {\r\n                    comics.map((item, i) => {\r\n                        // eslint-disable-next-line\r\n                        if (i > 9) return;\r\n                        return (\r\n                            <li key={i} className=\"char__comics-item\">\r\n                                {item.name}\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nCharInfo.propTypes = {\r\n    charId: PropTypes.number\r\n}\r\n\r\nexport default CharInfo;"]},"metadata":{},"sourceType":"module"}