{"ast":null,"code":"var _jsxFileName = \"C:\\\\DiskA\\\\Frontend\\\\Udemy2021Tasks\\\\Projects\\\\React\\\\marvel\\\\marvel-app\\\\src\\\\components\\\\pages\\\\SingleComicPage.js\",\n    _s = $RefreshSig$();\n\nimport './singleComicPage.scss'; // import xMen from '../../resources/img/x-men.png';\n\nimport useMarvelService from '../../services/MarvelService';\nimport { useParams, Link } from 'react-router-dom';\nimport { useEffect, useState } from 'react'; // import PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SingleComicPage = () => {\n  _s();\n\n  const {\n    comicId\n  } = useParams();\n  const [comic, setComic] = useState(null);\n  const {\n    loading,\n    error,\n    getComic,\n    clearError\n  } = useMarvelService();\n  useEffect(() => {\n    updateComic();\n  }, [comicId]);\n\n  const updateComic = () => {\n    clearError();\n    getComic(comicId).then(onComicLoaded);\n  };\n\n  const onComicLoaded = comic => {\n    setComic(comic);\n  };\n\n  const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 31\n  }, this) : null;\n  const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 34\n  }, this) : null;\n  console.log(comic, \"from body\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [errorMessage, spinner, /*#__PURE__*/_jsxDEV(View, {\n      comic: comic\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SingleComicPage, \"HHAFEEEFW5fn7CxtcsRRtnb5mqw=\", false, function () {\n  return [useParams, useMarvelService];\n});\n\n_c = SingleComicPage;\n\nconst View = _ref => {\n  let {\n    comic\n  } = _ref;\n  //    console.log(comic.title, \"data\");\n  // const {title, thumbnail, description, pageCount, language, price} = comic;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"single-comic\",\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"#\",\n      className: \"single-comic__back\",\n      children: \"Back to all\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = View;\nexport default SingleComicPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SingleComicPage\");\n$RefreshReg$(_c2, \"View\");","map":{"version":3,"sources":["C:/DiskA/Frontend/Udemy2021Tasks/Projects/React/marvel/marvel-app/src/components/pages/SingleComicPage.js"],"names":["useMarvelService","useParams","Link","useEffect","useState","Spinner","ErrorMessage","SingleComicPage","comicId","comic","setComic","loading","error","getComic","clearError","updateComic","then","onComicLoaded","spinner","errorMessage","console","log","View"],"mappings":";;;AAAA,OAAO,wBAAP,C,CACA;;AACA,OAAQA,gBAAR,MAA+B,8BAA/B;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,kBAAhC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC,C,CACA;;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAE1B,QAAM;AAACC,IAAAA;AAAD,MAAYP,SAAS,EAA3B;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAM;AAAEO,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,QAAlB;AAA4BC,IAAAA;AAA5B,MAA2Cd,gBAAgB,EAAjE;AAGAG,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,WAAW;AACd,GAFQ,EAEP,CAACP,OAAD,CAFO,CAAT;;AAID,QAAMO,WAAW,GAAG,MAAM;AACrBD,IAAAA,UAAU;AACVD,IAAAA,QAAQ,CAACL,OAAD,CAAR,CACKQ,IADL,CACUC,aADV;AAEH,GAJF;;AAMA,QAAMA,aAAa,GAAIR,KAAD,IAAW;AAC5BC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,GAFF;;AAIC,QAAMS,OAAO,GAAGP,OAAO,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAH,GAAgB,IAAvC;AACA,QAAMQ,YAAY,GAAGP,KAAK,gBAAG,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,UAAH,GAAqB,IAA/C;AAEAQ,EAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ,EAAmB,WAAnB;AACA,sBACI;AAAA,eACKU,YADL,EAEKD,OAFL,eAGI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAET;AAAb;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ;AAOH,CAjCD;;GAAMF,e;UAEgBN,S,EAG+BD,gB;;;KAL/CO,e;;AAmCN,MAAMe,IAAI,GAAG,QAAa;AAAA,MAAZ;AAACb,IAAAA;AAAD,GAAY;AAC1B;AACI;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,2BASI;AAAG,MAAA,IAAI,EAAC,GAAR;AAAY,MAAA,SAAS,EAAC,oBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAjBD;;MAAMa,I;AAmBN,eAAef,eAAf","sourcesContent":["import './singleComicPage.scss';\r\n// import xMen from '../../resources/img/x-men.png';\r\nimport  useMarvelService  from '../../services/MarvelService';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nconst SingleComicPage = () => {\r\n\r\n    const {comicId} = useParams();\r\n    const [comic, setComic] = useState(null);\r\n\r\n    const { loading, error, getComic, clearError } = useMarvelService();\r\n\r\n\r\n    useEffect(() => {\r\n        updateComic();\r\n    },[comicId])\r\n\r\n   const updateComic = () => { \r\n        clearError();\r\n        getComic(comicId)\r\n            .then(onComicLoaded)\r\n    }\r\n\r\n   const onComicLoaded = (comic) => {\r\n        setComic(comic);\r\n    }\r\n\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n\r\n    console.log(comic, \"from body\");\r\n    return (\r\n        <>\r\n            {errorMessage}\r\n            {spinner}\r\n            <View comic={comic}/>\r\n        </>\r\n    )\r\n}\r\n\r\nconst View = ({comic}) => {\r\n//    console.log(comic.title, \"data\");\r\n    // const {title, thumbnail, description, pageCount, language, price} = comic;\r\n\r\n    return (\r\n        <div className=\"single-comic\">\r\n            {/* <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\r\n            <div className=\"single-comic__info\">\r\n                <h2 className=\"single-comic__name\">{title}</h2>\r\n                <p className=\"single-comic__descr\">{description}</p>\r\n                <p className=\"single-comic__descr\">{pageCount}</p>\r\n                <p className=\"single-comic__descr\">Language: {language}</p>\r\n                <div className=\"single-comic__price\">{price}$</div>\r\n            </div> */}\r\n            <a href=\"#\" className=\"single-comic__back\">Back to all</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleComicPage;"]},"metadata":{},"sourceType":"module"}