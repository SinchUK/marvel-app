{"version":3,"file":"static/js/748.bbbcf10f.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorMessage/ErrorMessage.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","services/MarvelService.js","hooks/http.hook.js","../node_modules/react-transition-group/esm/utils/ChildMapping.js","../node_modules/react-transition-group/esm/TransitionGroup.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import './appBanner.scss';\r\nimport avengers from '../../resources/img/Avengers.png';\r\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\r\n\r\nconst AppBanner = () => {\r\n    return (\r\n        <div className=\"app__banner\">\r\n            <img src={avengers} alt=\"Avengers\"/>\r\n            <div className=\"app__banner-text\">\r\n                New comics every week!<br/>\r\n                Stay tuned!\r\n            </div>\r\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBanner;","import img from './error.gif';\r\n\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: '250px', height: '250px', objectFit:\r\n         'contain', margin: '0 auto' }} src={img} alt=\"error img\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import './comicsList.scss';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport { Link } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nconst ComicsList = () => {\r\n\r\n    const [comicsList, setComicsList] = useState([]);\r\n    const [offset, setOffset ] = useState(1000);\r\n    const [newItemLoading, setNewItemLoading] = useState(false);\r\n    const [comicsEnded, setComicsEnded] = useState(false);\r\n\r\n    const {loading, error, getAllComics} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        onRequest(offset, true);\r\n    },[])\r\n\r\n    const onRequest = (offset, initial) => {\r\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n        getAllComics(offset)\r\n            .then(onComicsListLoaded);\r\n    }\r\n\r\n    const  onComicsListLoaded = (newComicsList) => {\r\n        let ended = false;\r\n        if (newComicsList.length < 8) {\r\n            ended = true;\r\n        }\r\n        setNewItemLoading(newItemLoading => false);\r\n        setComicsList([...comicsList, ...newComicsList]); \r\n\r\n        setOffset(offset => offset + 8);\r\n        setComicsEnded(comicsEnded => ended);\r\n        // (newComicsList) => [...comicsList, ...newComicsList]\r\n    }\r\n\r\n    function renderItems (arr) {\r\n        const items = arr.map(( item, i ) => {\r\n            const {title, thumbnail, price, id} = item;\r\n            return (\r\n                <CSSTransition  in={true} key={id} timeout={300} classNames=\"comics__item\">\r\n                    <li key={i} className=\"comics__item\">\r\n                        <Link to={`/comics/${id}`}>\r\n                            <img src={thumbnail} alt=\"ultimate war\" className=\"comics__item-img\"/>\r\n                            <div className=\"comics__item-name\">{title}</div>\r\n                            <div className=\"comics__item-price\">{price}</div>\r\n                        </Link>\r\n                    </li>\r\n                </CSSTransition>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <ul className='comics__grid'>\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    const items = renderItems(comicsList);\r\n\r\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n\r\n    return (\r\n        <div className=\"comics__list\">\r\n            <div className='comimcs__loading'>\r\n                {errorMessage}\r\n                {spinner}\r\n            </div>\r\n            <TransitionGroup component={null}>\r\n                {items}\r\n            </TransitionGroup>\r\n            \r\n            <button \r\n                className=\"button button__main button__long\"\r\n                style={{'display': comicsEnded ? 'none' : 'block'}}\r\n                onClick={() => onRequest(offset)}\r\n                disabled={newItemLoading}>\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ComicsList;","import { CSSTransition } from \"react-transition-group\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\n\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <AppBanner />\r\n            <ComicsList />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;","\r\nimport { useHttp } from '../hooks/http.hook';\r\n\r\n\r\nconst useMarvelService = () => {\r\n    const { loading, request, error, clearError } = useHttp();\r\n\r\n    const _apiBase ='https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'ecbc50ab1d1d150b779bd5f2481d19e0';\r\n    const _baseOffset = 210;\r\n\r\n    const getAllComics = async (offset = 0) => {\r\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&apikey=${_apiKey}`);\r\n        return res.data.results.map(_transformComic);\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?apikey=${_apiKey}`);\r\n        return _transformComic(res.data.results[0]);\r\n    }\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res  = await request(`${_apiBase}characters?limit=9&offset=${offset}&apikey=${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?apikey=${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const _transformComic = (comic) => {\r\n        return {\r\n            id: comic.id,\r\n            title: comic.title,\r\n            price: comic.prices[0].price === 0 ? \"Not available\" : comic.prices[0].price+'$',\r\n            thumbnail: comic.thumbnail.path + \".\" + comic.thumbnail.extension,\r\n            url: comic.urls[0].url,\r\n            pageCount: comic.pageCount || 'No information about the number of pages',\r\n            // language: comic.textObjects[0] === undefined ? 'en - us' : comic.textObjects[0].language,\r\n            language: comic.textObjects?.length ? comic.textObjects[0].language : 'en-us',\r\n            description: comic.description || 'There is no description',\r\n        }\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0,210)}...` : 'There is no description for this character...',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n    return {loading, error, getAllCharacters, getCharacter, clearError, getAllComics, getComic}\r\n}\r\n\r\nexport default useMarvelService;\r\n\r\n\r\n\r\n\r\n// const postData = async (url, data) => {\r\n//     let res = await fetch(url, {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//             'Content-Type': 'application/json'\r\n//         },\r\n//         body: data\r\n//     });\r\n//     return await res.json();\r\n// };\r\n\r\n// async function getResource(url) {\r\n//     let res = await fetch(url);\r\n\r\n//     if (!res.ok) {\r\n//         throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n//     }\r\n\r\n//     return await res.json();\r\n// }\r\n\r\n// export {postData};\r\n// export {getResource};","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [ loading, setLoading ] = useState(false);\r\n    const [ error, setError ] = useState(null);\r\n\r\n    const request = useCallback( async (url, method='GET', body = null, headers = {'Content-type': 'application/json'}) => {\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const responce = await fetch(url, {method, body, headers});\r\n            \r\n            if (!responce.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${responce.status}`);\r\n            }\r\n\r\n            const data = await responce.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n\r\n        } catch(e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n\r\n    }, [])\r\n\r\n    const clearError = useCallback(()=> setError(null), []);\r\n\r\n    return { loading, request, error, clearError }\r\n\r\n}","import { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["className","src","avengers","alt","avengersLogo","style","display","width","height","objectFit","margin","img","useState","comicsList","setComicsList","offset","setOffset","newItemLoading","setNewItemLoading","comicsEnded","setComicsEnded","useMarvelService","loading","error","getAllComics","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","items","arr","map","item","i","title","thumbnail","price","id","CSSTransition","in","timeout","classNames","to","renderItems","spinner","Spinner","errorMessage","ErrorMessage","TransitionGroup","component","onClick","disabled","AppBanner","setLoading","setError","request","useCallback","url","method","body","headers","fetch","responce","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","res","results","_transformComic","getComic","getAllCharacters","_transformCharacter","getCharacter","comic","prices","path","extension","urls","pageCount","language","textObjects","description","char","name","slice","homepage","wiki","comics","getChildMapping","children","mapFn","result","Object","create","Children","c","forEach","child","key","isValidElement","mapper","getProp","prop","props","getNextChildMapping","nextProps","prevChildMapping","onExited","nextChildMapping","prev","next","getValueForKey","nextKeysPending","pendingKeys","prevKey","push","childMapping","nextKey","pendingNextKey","mergeChildMappings","keys","hasPrev","hasNext","prevChild","isLeaving","cloneElement","bind","exit","enter","values","obj","k","_React$Component","context","_this","handleExited","call","this","_assertThisInitialized","state","contextValue","isMounting","firstRender","_inheritsLoose","_proto","prototype","componentDidMount","mounted","setState","componentWillUnmount","getDerivedStateFromProps","_ref","appear","node","currentChildMapping","_extends","render","_this$props","Component","childFactory","_objectWithoutPropertiesLoose","React","TransitionGroupContext","value","propTypes","defaultProps","self","ReferenceError","_toConsumableArray","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}